import{_ as p,E as t,o as e,c,J as a,k as l,a as o,S as n}from"./chunks/framework.94c9b175.js";const k=JSON.parse('{"title":"JSX扩展","description":"","frontmatter":{},"headers":[],"relativePath":"guide/jsx.md","filePath":"guide/jsx.md"}'),r={name:"guide/jsx.md"},D=l("h1",{id:"jsx扩展",tabindex:"-1"},[o("JSX扩展 "),l("a",{class:"header-anchor",href:"#jsx扩展","aria-label":'Permalink to "JSX扩展"'},"​")],-1),F=l("p",null,"Alins 采用 JSX描述UI，但是在JSX的基础上做了一些扩展，以使其可以实现更加强大的能力。本章节目的就是介绍一些Alins中对JSX做的一些扩展",-1),y=l("h2",{id:"_1-jsx返回值",tabindex:"-1"},[o("1.JSX返回值 "),l("a",{class:"header-anchor",href:"#_1-jsx返回值","aria-label":'Permalink to "1.JSX返回值"'},"​")],-1),C=l("p",null,"不同于React中JSX返回一个React Component，在Alins中，JSX渲染函数会返回原生的DOM元素或者DocumentFragment元素，所以我们可以使用如下语句向App元素中添加一个元素：",-1),A=n("",4),i=n("",3),d=n("",4),_=n("",3),g=n("",4),h=n("",7),u=n("",4),m=n("",5),T=n("",3),E=n("",3),$=n("",2);function b(S,v,f,x,P,j){const s=t("CodeBox");return e(),c("div",null,[D,F,y,C,a(s),A,a(s),i,a(s),d,a(s),_,a(s),g,a(s),h,a(s),u,a(s),m,a(s),T,a(s),E,a(s),$])}const J=p(r,[["render",b]]);export{k as __pageData,J as default};
